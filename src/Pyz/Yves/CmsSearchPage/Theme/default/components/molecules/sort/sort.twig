{% extends model('component') %}

{% define config = {
    name: 'sort'
} %}

{% block body %}
    <div class="grid grid--middle grid--justify">
        <div class="{{ config.name }}__col {{ config.name }}__col--counter col col--sm-12 col--lg-auto spacing-y spacing-y--inner">
            {{ _view.pagination.numFound }} {{ 'cms.page.itemsFound' | trans }}
        </div>

        <div class="{{ config.name }}__col col col--sm-12 col--lg-auto">
            <div class="{{ config.name }}__filter-grid grid">
                <div class="{{ config.name }}__col {{ config.name }}__col--select col col--sm-6 col--lg-auto">
                    <div class="grid grid--middle">
                        <div class="{{ config.name }}__col col is-hidden-sm-md">
                            {{ 'cms.page.filter.per' | trans }}:
                        </div>

                        <div class="{{ config.name }}__col col col col--sm-12 col--lg-auto">
                            {% embed molecule('custom-select') with {
                                modifiers: ['small', 'light', 'mobile-expand', 'different-mob-caret'],
                                attributes: {
                                    name: 'ipp',
                                    'config-theme': 'small'
                                },
                                embed: {
                                    pagination: _view.pagination,
                                    jsName: config.jsName
                                }
                            } only %}
                                {% block selectClass %}
                                    {{ parent() }} {{ embed.jsName ~ '__per-page-select' }}
                                {% endblock %}

                                {% block options %}
                                    {% for limit in embed.pagination.config.validItemsPerPageOptions %}
                                        <option value="{{ limit }}" {% if limit == embed.pagination.currentItemsPerPage %}selected{% endif %}>{{ limit }}</option>
                                    {% endfor %}
                                {% endblock %}

                                {% block caret %}
                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-sm-md',
                                        data: {
                                            name: 'caret-down'
                                        }
                                    } only %}

                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-lg-xxl',
                                        data: {
                                            name: 'double-chevrons'
                                        }
                                    } only %}
                                {% endblock %}
                            {% endembed %}
                        </div>
                    </div>
                </div>

                <div class="{{ config.name }}__col {{ config.name }}__col--select col col--sm-6 col--lg-auto">
                    <div class="grid grid--middle">
                        <div class="{{ config.name }}__col col is-hidden-sm-md">
                            {{ 'cms.page.sort' | trans }}:
                        </div>

                        <div class="{{ config.name }}__col col col col--sm-12 col--lg-auto">
                            {% embed molecule('custom-select') with {
                                modifiers: ['small', 'light', 'mobile-expand', 'different-mob-caret'],
                                attributes: {
                                    name: 'sort',
                                    'config-theme': 'small'
                                },
                                embed: {
                                    sort: _view.sort,
                                    jsName: config.jsName
                                }
                            } only %}
                                {% block selectClass %}
                                    {{ parent() }} {{ embed.jsName ~ '__sort-select' }}
                                {% endblock %}

                                {% block options %}
                                    <option value="">{{ 'cms.page.sort.relevance' | trans }}</option>
                                    {% for sortParamName in embed.sort.sortParamNames %}
                                        <option value="{{ sortParamName }}" {% if sortParamName == embed.sort.currentSortParam %}selected{% endif %}>
                                            {{ ('cms.page.sort.' ~ sortParamName) | trans }}
                                        </option>
                                    {% endfor %}
                                {% endblock %}

                                {% block caret %}
                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-sm-md',
                                        data: {
                                            name: 'caret-down'
                                        }
                                    } only %}

                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-lg-xxl',
                                        data: {
                                            name: 'double-chevrons'
                                        }
                                    } only %}
                                {% endblock %}
                            {% endembed %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    {% include molecule('form-handler') with {
        attributes: {
            'trigger-selector': '.' ~ config.jsName ~ '__per-page-select' ~ ', .' ~ config.jsName ~ '__sort-select'
        }
    } only %}
{% endblock %}
