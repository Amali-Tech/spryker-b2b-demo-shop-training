{% extends molecule('ordered-configured-bundle', '@SprykerShop:SalesConfigurableBundleWidget') %}

{% define config = {
    name: 'ordered-configured-bundle',
    tag: 'ordered-configured-bundle',
} %}

{% define attributes = {
    'trigger-class-name': 'js-' ~ config.name ~ '-trigger',
    'target-class-name': 'js-' ~ config.name ~ '-target',
} %}

{%- block extraClass %}{% endblock -%}

{% block bundleInner %}
    {% block bundleGeneralInformation %}
        <div class="grid col col--sm-12 col--md-7">
            {% block bundleName %}
                <div class="grid grid--middle">
                    {% embed atom('checkbox') with {
                        class: 'js-customer-reorder-form__selection',
                        embed: {
                            triggerClass: config.jsName ~ '-trigger',
                        },
                    } only %}
                        {% block inputClass %}
                            {{ embed.triggerClass }}
                        {% endblock %}
                    {% endembed %}
                </div>

                <h6 class="{{ config.name }}__title spacing-right spacing-right--big">
                    {%- block bundleNameText -%}
                        {{ parent() }}
                    {%- endblock -%}
                </h6>
            {% endblock %}
        </div>
    {% endblock %}

    <div class="grid grid--right col col--sm-12 col--md-5">
        {% block bundlePriceInformation %}
            <div class="{{ config.name }}__col col col--sm-12">
                {% block bundleTotal %}
                    {{ parent() }}
                {% endblock %}
            </div>
        {% endblock %}
    </div>
{% endblock %}

{% block bundleQuantity %}{% endblock %}

{%- block bundleTotalTitle -%}{%- endblock %}

{% block bundleProductListInner %}
    {% for item in data.bundle.salesOrderConfiguredBundleItems if data.items[item.IdSalesOrderItem] is defined %}
        {% include molecule('ordered-configured-bundle-product', 'SalesConfigurableBundleWidget') with {
            data: {
                product: data.items[item.IdSalesOrderItem],
                currencyIsoCode: data.currencyIsoCode,
                image: data.items[item.IdSalesOrderItem].metadata.image,
                targetClass: config.jsName ~ '-target',
            },
        } only %}
    {% endfor %}
{% endblock %}
