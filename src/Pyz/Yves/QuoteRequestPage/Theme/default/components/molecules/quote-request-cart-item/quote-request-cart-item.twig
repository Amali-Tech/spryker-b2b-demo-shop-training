{% extends model('component') %}

{% define config = {
    name: 'quote-request-cart-item',
    tag: 'article',
} %}

{% define data = {
    priceMode: required,
    cartItem: required,
    currency: required,
} %}

{% block body %}
    <div class="grid grid--stretch grid--gap">
        <div class="{{ config.name }}__column {{ config.name }}__column--image col">
            {% embed molecule('cart-image', 'CartPage') ignore missing with {
                class: 'product-item-image grid grid--middle',
                data: {
                    name: data.cartItem.name | default(''),
                    image: data.cartItem.images is empty ? null : (data.cartItem.images | first),
                },
            } only %}
                {% block body %}
                    {% if data.image is not empty %}
                        {% include atom('thumbnail') with {
                            modifiers: ['small', 'expand'],
                            attributes: {
                                alt: data.name,
                                src: data.image.externalUrlLarge,
                            },
                        } only %}
                    {% else %}
                        <div class="text-center">
                            <small>{{ 'global.no_image_available' | trans }}</small>
                        </div>
                    {% endif %}
                {% endblock %}
            {% endembed %}
        </div>

        <div class="{{ config.name }}__column {{ config.name }}__column--description col">
            <div class="{{ config.name }}__column {{ config.name }}__column--content col">
                <h6>{{ data.cartItem.name }}</h6>

                <small class="text-secondary">
                    {{ 'cart.item.sku' | trans }}
                    {{ data.cartItem.sku }}
                </small>

                <p class="text-small"><strong>{{ 'cart.item_quantity' | trans }}:</strong><span class="text-secondary spacing-x spacing-x--inner spacing-x--small">{{ data.cartItem.quantity }}</span></p>

                {% include molecule('quote-request-item-summary', 'QuoteRequestPage') with {
                    class: 'text-small',
                    data: {
                        priceMode: data.priceMode,
                        unitPrice: data.cartItem.unitPrice | money(true, data.currency.code),
                        subtotalPrice: data.cartItem.sumSubtotalAggregation | money(true, data.currency.code),
                        cartItem: data.cartItem,
                        currency: data.currency,
                    },
                } only %}

                {% if data.cartItem.quantitySalesUnit is not empty and data.cartItem.amountSalesUnit is not empty %}
                    {% include molecule('packaging-unit-cart', 'ProductPackagingUnitWidget') ignore missing with {
                        data: {
                            amount: data.cartItem.amount,
                            quantity: data.cartItem.quantity,
                            quantitySalesUnit: data.cartItem.quantitySalesUnit,
                            quantityConversion: data.cartItem.quantitySalesUnit.conversion,
                            quantityProductMeasurementUnit: data.cartItem.quantitySalesUnit.productMeasurementUnit,
                            amountSalesUnit: data.cartItem.amountSalesUnit,
                            amountConversion: data.cartItem.amountSalesUnit.conversion,
                            amountProductMeasurementUnit: data.cartItem.amountSalesUnit.productMeasurementUnit,
                            amountValue: data.cartItem.amountSalesUnit.value,
                        },
                    } only %}
                {% endif %}

                {% if data.cartItem.amountSalesUnit is empty and data.cartItem.quantitySalesUnit is not empty %}
                    {% set value = data.cartItem.quantitySalesUnit.value %}
                    {% set precision = data.cartItem.quantitySalesUnit.precision %}
                    {% set salesUnitName = data.cartItem.quantitySalesUnit.productMeasurementUnit.name | default('') %}
                    <p><small class="text-secondary">[= {{ value / precision }} {{ salesUnitName | trans }}]</small></p>
                {% endif %}

                {% block sourcePriceForm %}{% endblock %}
            </div>

            <div class="{{ config.name }}__column {{ config.name }}__column--total col">
                <strong class="float-right text-big">{{ data.cartItem.sumSubtotalAggregation | money(true, data.currency.code) }}</strong>
            </div>
        </div>
    </div>
{% endblock %}
