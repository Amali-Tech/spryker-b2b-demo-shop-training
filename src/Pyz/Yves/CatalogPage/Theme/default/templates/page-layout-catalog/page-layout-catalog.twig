{% extends template('page-layout-main') %}

{% define data = {
    products: required,
    facets: required,
    category: null,
    categories: [],
    categoryId: null,
    filterPath: null,
    viewMode: null,

    pagination: {
        currentPage: required,
        maxPage: required,
        parameters: app.request.query.all(),
        paginationPath: app.request.getPathInfo(),
        showAlwaysFirstAndLast: true
    }
} %}

{% macro renderBreadcrumbSteps(categoryNode, isLastLeaf, filterPath) %}
    {% import _self as self %}
    {% set categoryUrl = categoryNode.url | default %}
    {% set categoryUrl = filterPath is not empty ? url(filterPath, {categoryPath: categoryUrl}) : categoryUrl %}
    {% set categoryLabel = categoryNode.name | default %}
    {% set categoryPatrentNodes = categoryNode.parents | default %}

    {% if categoryPatrentNodes is not empty %}
        {{ self.renderBreadcrumbSteps(categoryPatrentNodes | first, false, filterPath) }}

        {% if not isLastLeaf %}
            {% include molecule('breadcrumb-step') with {
                data: {
                    url: categoryUrl,
                    label: categoryLabel
                }
            } only %}
        {% endif %}
    {% endif %}
{% endmacro %}

{% block breadcrumbs %}
    {% import _self as self %}

    {% embed molecule('breadcrumb') with {
        embed: {
            breadcrumbs: self.renderBreadcrumbSteps(data.category, false, data.filterPath)
        }
    } only %}
        {% block breadcrumbs %}
            {{ embed.breadcrumbs }}
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block contentClass %}page-layout-main page-layout-main--catalog-page{% endblock %}

{% block content %}
    <form method="GET" class="grid grid--gap js-form-input-default-value-disabler__catalog-form page-layout-main--catalog-page-content">
        {% block form %}
            {% include molecule('form-input-default-value-disabler') with {
                attributes: {
                    'form-selector': '.js-form-input-default-value-disabler__catalog-form',
                    'input-selector': '.js-form-input-default-value-disabler__catalog-input'
                }
            } only %}

            <div class="col col--sm-12 col--lg-4 col--xl-3">
                {% block filterBar %}
                    {% include molecule('view-mode-switch', 'CatalogPage') with {
                        class: 'is-hidden-sm-md',
                        data: {
                            viewMode: data.viewMode
                        }
                    } only %}

                    <button class="button button--justify button--additional js-catalog-filters-trigger is-hidden-lg-xxl spacing-bottom spacing-bottom--big">
                        {{ 'catalog.filter.button' | trans }} / {{ 'catalog.sort' | trans }}
                        {% include atom('icon') with {
                            modifiers: ['filter'],
                            data: {
                                name: 'filter'
                            }
                        } only %}
                    </button>

                    {% include molecule('toggler-click') with {
                        attributes: {
                            'trigger-selector': '.js-catalog-filters-trigger',
                            'target-selector': '.js-filter-section',
                            'class-to-toggle': 'is-hidden-sm-md',
                            'fix-body': 'true',
                            'class-to-fix-body': 'is-locked-mobile'
                        }
                    } only %}

                    {% include organism('filter-section', 'CatalogPage') with {
                        class: 'is-hidden-sm-md',
                        data: {
                            facets: data.facets,
                            filterPath: data.filterPath,
                            categories: data.categories
                        }
                    } only %}
                {% endblock %}
            </div>

            <div class="col col--sm-12 col--lg-8 col--xl-9">
                <div class="grid grid--column-mob-reverse">
                    <div class="col col--sm-12">
                        <div class="grid grid--justify grid--nowrap">
                            <div class="col col--lg-12">
                                {% include molecule('sort', 'CatalogPage') only %}
                            </div>
                            <div class="col">
                                {% include molecule('view-mode-switch', 'CatalogPage') with {
                                    class: 'is-hidden-lg-xxl',
                                    data: {
                                        viewMode: data.viewMode
                                    }
                                } only %}
                            </div>
                        </div>
                    </div>
                    <div class="col col--sm-12">
                        {% include organism('active-filter-section', 'CatalogPage') with {
                            data: {
                                facets: data.facets
                            }
                        } only %}
                    </div>
                </div>

                <div class="grid grid--stretch grid--gap">
                    {% for product in data.products %}
                        {% widget 'CatalogPageProductWidget' args [
                            product,
                            data.viewMode
                        ] only %}
                        {% endwidget %}
                    {% endfor %}
                </div>

                {% include molecule('pagination') with {
                    class: '',
                    data: data.pagination
                } only %}
            </div>
        {% endblock %}
    </form>
{% endblock %}
