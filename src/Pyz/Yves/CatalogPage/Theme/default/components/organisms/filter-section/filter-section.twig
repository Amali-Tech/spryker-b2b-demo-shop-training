{% extends model('component') %}

{% define config = {
    name: 'filter-section',
    tag: 'section'
} %}

{% define data = {
    facets: [],
    filterPath: null,
    categories: [],
    isEmptyCategoryFilterValueVisible: null
} %}

{% block class %}
    {{  parent() }}
    {{ config.jsName }}
{% endblock %}

{% block body %}
    <h3 class="{{ config.name ~ '__title' }} is-hidden-lg-xxl">{{ 'catalog.filter.and.sorting.button' | trans }}</h3>
    <button class="{{ config.name ~ '__close' }} is-hidden-lg-xxl js-catalog-filters-trigger">
        {% include atom('icon') with {
            data: {
                name: 'cross'
            }
        } only %}
    </button>

    <div class="{{ config.name ~ '__sorting ' ~ config.jsName ~ '__sorting' }} is-hidden-lg-xxl"></div>
    <div class="{{ config.name ~ '__holder' }}">
        {% for filter in data.facets %}
            {% set filterHasValues = filter.values is not defined or filter.values | length > 0 %}
            {% set toglerClass = '' %}

            {% if filterHasValues %}
                {% if filter.config.type == 'price-range' and can('SeePricePermissionPlugin') is empty %}

                {% else %}
                    <div class="{{ config.name ~ '__item' }} {% if filter.name == 'category' %}{{ config.name ~ '__item--hollow' }}{% endif %}">
                        <h6 class="{{ config.name ~ '__item-title toggler-accordion__item ' ~ config.jsName ~ '__trigger' ~ '-' ~ filter.name}} {% if filter.name == 'category' %}{{ 'is-hidden-lg-xxl' }}{% endif %}">
                            {{ ('product.filter.' ~ filter.name | lower) | trans }}
                            {% include atom('icon') with {
                                class: 'toggler-accordion__icon',
                                modifiers: ['small'],
                                data: {
                                    name: 'caret-down'
                                }
                            } only %}
                        </h6>
                        {% set contentModifier = filter.name == 'category' ? config.name ~ '__item-content--hollow' : '' %}
                        {% set hiddenClassToToggleSections = filter.name == 'category' ? 'is-hidden-sm-md' : 'is-hidden' %}
                        {% set toglerClass = config.name ~ '__item-content ' ~ config.jsName ~ '__' ~ filter.name ~ ' ' ~ hiddenClassToToggleSections ~ ' ' ~ contentModifier %}

                        <h6>{{ ('product.filter.' ~ filter.name | lower) | trans }}</h6>
                        {% include [
                            molecule('filter-' ~ filter.config.name, 'CatalogPage'),
                            molecule('filter-' ~ filter.config.type, 'CatalogPage')
                            ] ignore missing with {
                            data: {
                                filterPath: data.filterPath,
                                categories: data.categories,
                                filter: filter,
                                parameter: filter.config.parameterName | default(''),
                                min: filter.min | default(0),
                                max: filter.max | default(0),
                                activeMin: filter.activeMin | default(0),
                                activeMax: filter.activeMax | default(0),
                                isEmptyCategoryFilterValueVisible: data.isEmptyCategoryFilterValueVisible
                            },
                            class: toglerClass
                        } only %}

                        {% include molecule('toggler-click') with {
                            attributes: {
                                'trigger-selector': '.' ~ config.jsName ~ '__trigger-' ~ filter.name,
                                'target-selector': '.' ~ config.jsName ~ '__' ~ filter.name,
                                'class-to-toggle': hiddenClassToToggleSections,
                                'trigger-class-to-toggle': 'active'
                            }
                        } only %}
                    </div>
                {% endif %}
            {% endif %}
        {% endfor %}
    </div>

    <button type="submit" class="button button--expand button--big {{ config.name ~ '__button' }}">{{ 'catalog.filter.button' | trans }}</button>
{% endblock %}
