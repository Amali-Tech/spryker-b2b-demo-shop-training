{% extends model('component') %}

{% define config = {
    name: 'source-price-form',
    tag: 'source-price-form',
} %}

{% define data = {
    priceField: required,
    checkboxName: required,
    checkboxValue: required,
    isChecked: required,
    checkboxLabel: required,
    currentItemPrice: required,
    originItemPrice: required,
} %}

{% define attributes = {
    price: required,
} %}

{% block body %}
    <div class="grid grid--middle grid--justify grid--gap spacing-bottom">
        {% block adjustedPriceColumn %}
            <div class="col col--sm-6">
                {% block adjustedPriceColumnInner %}
                    <strong>
                        {% block adjustedPriceText %}
                            {% set isSamePrice = data.currentItemPrice == data.originItemPrice %}
                            {% set hiddenClass = isSamePrice ? 'is-hidden' %}
                            {% set priceClasses = config.jsName ~ '__origin-price text-big text-secondary ' ~ hiddenClass %}

                            {% block adjustedPriceTextInner %}
                                <s class="{{ priceClasses }}">
                                    {{ data.originItemPrice }}
                                </s>
                            {% endblock %}
                        {% endblock %}
                    </strong>
                {% endblock %}
            </div>
        {% endblock %}

        {% block priceColumn %}
            <div class="col col--sm-6">
                {% block priceColumnInner %}
                    {{ form_row(data.priceField, {'attr': {'class': config.jsName ~ '__input-container is-hidden'}}) }}
                    {% set isDifferentPrice = data.currentItemPrice != data.originItemPrice %}
                    {% set hiddenClass = isDifferentPrice ? 'is-hidden' %}
                    {% set price = isDifferentPrice ? data.originItemPrice : data.currentItemPrice %}

                    {% block price %}
                        <strong class="{{ config.jsName }}__price text-big {{ hiddenClass }}">{{ price }}</strong>
                    {% endblock %}
                {% endblock %}
            </div>
        {% endblock %}
    </div>
    {% block form %}
        <div class="grid grid--gap">
            <div class="col col--sm-12">
                {% embed atom('checkbox') with {
                    attributes: {
                        name: data.checkboxName,
                        value: data.checkboxValue,
                        checked: data.isChecked,
                        disabled: data.priceField.vars.disabled,
                    },
                    data: {
                        label: data.checkboxLabel,
                    },
                    embed: {
                        inputClass: config.jsName ~ '__checkbox-container',
                    },
                } only %}
                    {% block inputClass %}{{ embed.inputClass }}{% endblock %}
                {% endembed %}
            </div>
        </div>
    {% endblock %}
{% endblock %}
