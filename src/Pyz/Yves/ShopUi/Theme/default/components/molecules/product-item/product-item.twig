{% extends model('component') %}

{% define config = {
    name: 'product-item',
    tag: 'article',
} %}

{% define data = {
    list: {},
    listItem: required,
    attributes: [],
    options: [],
    canEdit: false,
    canRemove: false,
    quantity: null,
    imageModifiers: [],
    isShoppingList: false,
    currencyIsoCode: null,
} %}

{% block body %}
    {% set amountSalesUnit = data.listItem.amountSalesUnit is defined ? data.listItem.amountSalesUnit : null %}
    {% set quantitySalesUnit = data.listItem.quantitySalesUnit is defined ? data.listItem.quantitySalesUnit : null %}
    {% set price = data.listItem.unitPrice is defined ? data.listItem.unitPrice : data.listItem.price %}
    <div class="grid grid--stretch grid--gap">
        <div class="{{ component.renderClass(config.name ~ '__col', modifiers) }} {{ config.name }}__col--image col">
            {% block image %}
                {% if data.listItem.url is defined and data.listItem.url is not empty %}
                    <a href="{{ data.listItem.url }}" title="{{ data.listItem.name }}">
                        {% include molecule('product-item-image') with {
                            modifiers: data.imageModifiers,
                            data: {
                                name: data.listItem.name | default(''),
                                image: data.listItem.images is empty ? null : (data.listItem.images | first),
                            },
                        } only %}
                    </a>
                {% else %}
                    {% include molecule('product-item-image') with {
                        class: 'spacing-y spacing-y--inner spacing-y--reset',
                        modifiers: data.imageModifiers,
                        data: {
                            name: data.listItem.name | default(''),
                            image: data.listItem.images is empty ? null : (data.listItem.images | first),
                        },
                    } only %}
                {% endif %}
            {% endblock %}
        </div>

        {% block productDescription %}
            <div class="{{ component.renderClass(config.name ~ '__col', modifiers) }} {{ config.name }}__col--description col">
                <div class="grid grid--stretch grid--gap {{ config.name }}__inner {{ config.name }}__inner--full-height">
                    <div class="{{ component.renderClass(config.name ~ '__col', modifiers) }} {{ config.name }}__col--content col">
                        {% block productCharacteristics %}
                            {% block title %}
                                <h6>
                                    <a href="{{ data.listItem.url }}" class="{{ component.renderClass(config.name ~ '__title', modifiers) }}" title="{{ data.listItem.name }}">{{ data.listItem.name }}</a>
                                </h6>
                            {% endblock %}

                            {% block info %}
                                <small class="text-secondary">{{ 'cart.item.sku' | trans }}: {{ data.listItem.sku }}</small>
                            {% endblock %}

                            {% block productInfo %}
                                {% block quantityTitle %}
                                    {% if data.quantity is not empty %}
                                        <div class="grid grid--middle grid--gap {{ config.name }}__quantity">
                                            <div class="col">
                                                <span class="{{ config.name }}__quantity-title">{{ 'cart.item_quantity' | trans }}:</span> {{ data.quantity }}
                                            </div>
                                            {% block subQuantity %}{% endblock %}
                                        </div>
                                    {% endif %}
                                {% endblock %}

                                {% block packagingUnitCart %}
                                    {% if quantitySalesUnit is not empty and amountSalesUnit is not empty %}
                                        {% include molecule('packaging-unit-cart', 'ProductPackagingUnitWidget') with {
                                            data: {
                                                amount: data.listItem.amount,
                                                quantity: data.listItem.quantity,
                                                quantitySalesUnit: data.listItem.quantitySalesUnit,
                                                quantityConversion: data.listItem.quantitySalesUnit.conversion,
                                                quantityProductMeasurementUnit: data.listItem.quantitySalesUnit.productMeasurementUnit,
                                                amountSalesUnit: data.listItem.amountSalesUnit,
                                                amountConversion: data.listItem.amountSalesUnit.conversion,
                                                amountProductMeasurementUnit: data.listItem.amountSalesUnit.productMeasurementUnit,
                                                amountValue: data.listItem.amountSalesUnit.value,
                                            },
                                        } only %}
                                    {% endif %}
                                {% endblock %}

                                {% block salesInfo %}
                                    {% set isAmountEmpty = amountSalesUnit is empty and quantitySalesUnit is not empty and data.quantity is empty %}

                                    {% if isAmountEmpty %}
                                        <div class="{{ config.name }}__quantity grid grid--middle grid--gap">
                                            <div class="col col--sm-12 col--md-2">{{ 'packaging_units.cart.quantity' | trans }}: </div>
                                            <div class="col">
                                                {% set cartProductMeasurementUnitQuantitySelectorWidget = findWidget('CartProductMeasurementUnitQuantitySelectorWidget', [data.listItem]) %}

                                                {% if cartProductMeasurementUnitQuantitySelectorWidget and data.canEdit %}
                                                    {% widget cartProductMeasurementUnitQuantitySelectorWidget only %}{% endwidget %}
                                                {% else %}
                                                    {% include molecule('product-item-quantity') with {
                                                        data: {
                                                            productItem: data.listItem,
                                                            isDisabled: not data.canEdit,
                                                        },
                                                    } only %}
                                                {% endif %}
                                            </div>
                                        </div>
                                    {% endif %}
                                {% endblock %}

                                {% block itemAttributes %}
                                    {% if data.attributes is not empty %}
                                        {% include molecule('product-item-variant-selector') with {
                                            data: {
                                                productItem: data.listItem,
                                                productItemAttributes: data.attributes,
                                                canEdit: data.canEdit,
                                            },
                                        } only %}
                                    {% endif %}
                                {% endblock %}

                                {% block bundle %}
                                    {% widget 'ProductBundleCartItemsListWidget' args [data.listItem, data.list] only %}
                                    {% endwidget %}
                                {% endblock %}
                            {% endblock %}
                        {% endblock %}

                        {% block additionalInfo %}
                            {% block note %}
                                {% widget 'CartItemNoteFormWidget' args [data.listItem, data.list] only %}{% endwidget %}
                            {% endblock %}

                            {% if data.listItem.productOptions is defined and data.listItem.productOptions | length > 0 %}
                                {% include molecule('product-item-options') with {
                                    modifiers: modifiers,
                                    data: {
                                        productItem: data.listItem,
                                    },
                                } only %}
                            {% endif %}

                            {% if data.options | length > 0 %}
                                {% include molecule('product-item-options') with {
                                    data: {
                                        options: data.options,
                                    },
                                } only %}
                            {% endif %}
                        {% endblock %}
                    </div>

                    <div class="{{ component.renderClass(config.name ~ '__col', modifiers) }} {{ config.name }}__col--total col">
                        <div class="{{ config.name }}__inner {{ config.name }}__inner--full-height {{ config.name }}__inner--actions grid grid--column grid--justify-column">
                            <div class="col col--sm-12">
                                <div class="{{ config.name }}__inner {{ config.name }}__inner--total grid grid--column">
                                    {% block price %}
                                        {% set originalAmount = data.listItem.prices.ORIGINAL is not defined or data.listItem.prices.ORIGINAL is empty ? null : data.listItem.prices.ORIGINAL %}

                                        {% include molecule('money-price') with {
                                            modifiers: ['cart'],
                                            data: {
                                                amount: price,
                                                originalAmount: originalAmount,
                                                currencyIsoCode: data.currencyIsoCode,
                                            },
                                        } only %}
                                    {% endblock %}
                                    {% block quantity %}
                                        {% set isAmountSalesUnitEmpty = amountSalesUnit is empty and quantitySalesUnit is empty and data.quantity is empty %}

                                        {% if isAmountSalesUnitEmpty %}
                                            <div class="{{ config.name }}__quantity-holder">
                                                {% set cartProductMeasurementUnitQuantitySelectorWidget = findWidget('CartProductMeasurementUnitQuantitySelectorWidget', [data.listItem]) %}

                                                {% if cartProductMeasurementUnitQuantitySelectorWidget and data.canEdit %}
                                                    {% widget cartProductMeasurementUnitQuantitySelectorWidget only %}{% endwidget %}
                                                {% else %}
                                                    {% include molecule('product-item-quantity') with {
                                                        data: {
                                                            productItem: data.listItem,
                                                            isDisabled: not data.canEdit,
                                                        },
                                                    } only %}
                                                {% endif %}
                                            </div>
                                        {% endif %}
                                    {% endblock %}
                                    {% block totalPrice %}{% endblock %}
                                </div>
                            </div>

                            {% block deleteButton %}
                                {% if data.canRemove %}
                                    <div class="col {{ config.name }}__delete-cart">
                                        <a class="link link--icon" href="{{ path('cart/remove', {'sku': data.listItem.sku, 'groupKey': data.listItem.groupKey }) }}" title="{{ 'cart.delete.item' | trans }}" data-init-single-click>
                                            {% include atom('icon') with {
                                                modifiers: ['link'],
                                                data: {
                                                    name: 'delete',
                                                },
                                            } only %}
                                            <span class="is-hidden-sm-md">{{ 'cart.delete.item' | trans }}</span>
                                        </a>
                                    </div>
                                {% endif %}
                            {% endblock %}
                        </div>
                    </div>
                </div>
            </div>
        {% endblock %}
    </div>
{% endblock %}
