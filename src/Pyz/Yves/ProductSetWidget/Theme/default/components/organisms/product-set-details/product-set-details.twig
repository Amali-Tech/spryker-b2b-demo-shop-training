{% extends organism('product-set-details', '@SprykerShop:ProductSetWidget') %}

{% define data = {
    title: '',
    addAllSetButton: can('SeeAddToCartPermissionPlugin') | default(false),
    sliderConfig: '{
        "slidesToShow": 4,
        "slidesToScroll": 1,
        "dots": false,
        "infinite": false,
        "responsive": [{
            "breakpoint": 768,
            "settings": {
                "slidesToShow": 2
                }
        },
        {
            "breakpoint": 375,
            "settings": {
                "slidesToShow": 1
            }
        }]
    }',
} %}
{% block body %}
    {% block banner %}
        {% embed molecule('banner') with {
            class: config.name ~ '__banner',
            data: {
                imageUrl: data.images.0.externalUrlLarge | default(null),
                title: data.title,
            },
        } only %}
            {% block body %}
                <div class="{{config.name}}__container grid grid--column grid--middle grid--center" style="{{backgroundImage}}">
                    <h1 class="title title--light title--product-set-details">
                        {{ data.title }}
                    </h1>
                    <p class="{{ config.name }}__text {{ config.name }}__text--subtitle spacing-bottom spacing-bottom--reset">{{ 'product.set' | trans }} </p>
                </div>
            {% endblock %}
        {% endembed %}
    {% endblock %}

    {% block header %}
        <form action="{{ path('cart/add-items') }}" method="POST">
            {% embed organism('section') with {
                modifiers: ['secondary'],
                class: 'text-center',
                data: {
                    title: 'product.sets.widget.title' | trans,
                },
                embed: {
                    description: data.description,
                    addAllSetButton: data.addAllSetButton,
                    products: data.products,
                    jsName: config.jsName,
                },
            } only %}
                {% block inner %}
                    <div class="{{ config.name }}__text">
                        {% block description %}
                            {% if embed.description is not empty %}
                                <p>{{ embed.description }}</p>
                            {% endif %}
                        {% endblock %}
                    </div>

                    {% if embed.addAllSetButton and embed.products | length %}
                        {% set isDisabled = false %}

                        {% for product in embed.products %}
                            {% if product.idProductConcrete is not empty %}
                                {% if product.available %}
                                    <input type="hidden" class="{{ embed.jsName }}__product-sku-hidden-input" name="items[{{ loop.index }}][sku]" value="{{ product.sku }}">
                                    <input type="hidden" name="items[{{ loop.index }}][quantity]" value="1">
                                {% endif %}
                            {% else %}
                                {% set isDisabled = true %}
                            {% endif %}
                        {% endfor %}

                        <button type="submit" class="button button--expand-sm-only spacing-bottom spacing-bottom--biggest" {% if isDisabled %}disabled{% endif %}>
                            {{ 'product.set.detail.add_all_to' | trans }}
                            {% include atom('icon') with {
                                class: 'spacing-y spacing-y--reset',
                                modifiers: ['cart'],
                                data: {
                                    name: 'cart',
                                },
                            } only %}
                        </button>
                    {% endif %}
                {% endblock %}
            {% endembed %}
        </form>
    {% endblock %}

    {% block productSet %}
        <form method="GET">
            {% embed molecule('slick-carousel') with {
                modifiers: ['product-set', 'equal-height'],
                data: {
                    slides: data.products,
                },
                attributes: {
                    'slider-config': data.sliderConfig,
                    'custom-select-class-name': 'custom-select',
                },
                embed: {
                    jsName: config.jsName,
                },
            } only %}
                {% block slides %}
                    {% for product in data.slides %}
                        {% embed molecule('product-item') with {
                            class: embed.jsName ~ '__product-item',
                            modifiers: ['catalog', 'sets', 'stretch'],
                            data: {
                                product: product,
                            },
                        } only %}
                            {% block actionsContainer %}
                                <div class="{{ config.name }}__variant">
                                    {% set isNotAvailable = data.product.idProductConcrete and not data.product.available %}

                                    {% embed molecule('variant-configurator', 'ProductDetailPage') ignore missing with {
                                        data: {
                                            superAttributes: data.product.attributeMap.superAttributes,
                                            selectedAttributes: data.product.selectedAttributes,
                                            availableAttributes: data.product.availableAttributes,
                                            useExternalForm: true,
                                        },
                                        embed: {
                                            product: data.product,
                                        },
                                    } only %}
                                        {% block variant %}
                                            {% if can('SeeAddToCartPermissionPlugin') %}
                                                {% include molecule('variant', 'ProductDetailPage') ignore missing with {
                                                    modifiers: ['product-set'],
                                                    data: {
                                                        name: name,
                                                        formName: 'attributes[' ~ embed.product.idProductAbstract ~ '][' ~ name ~ ']',
                                                        values: values,
                                                        selectedValue: selectedValue,
                                                        label: ('product.attribute.' ~ name) | trans,
                                                        isAvailable: isAvailable,
                                                        selectModifiers: ['small'],
                                                        selectTheme: 'small',
                                                        selectPlaceholder: 'global.select.placeholder.value',
                                                        autoInitSelect: false,
                                                    },
                                                } only %}
                                            {% endif %}
                                        {% endblock %}
                                    {% endembed %}

                                    {% if isNotAvailable %}
                                        <p>
                                            <strong>{{ 'product.detail.out_of_stock' | trans }}</strong>
                                        </p>
                                    {% endif %}
                                </div>

                                {% if can('SeeAddToCartPermissionPlugin') %}
                                    {% set isDisabled = not data.product.idProductConcrete or not data.product.available or not can('ROLE_USER') %}

                                    <div class="{{ config.name }}__actions {{ config.name }}__actions--sticky-bottom">
                                        {% if isDisabled %}
                                            <button type="button" class="button button--expand" disabled>{{ 'page.detail.add-to-cart' | trans }}</button>
                                        {% else %}
                                            <a href="{{ path('cart/add', {sku: data.product.sku}) }}"
                                               class="button button--expand {{ config.jsName }}__link-add-to-cart"
                                               title="{{ 'page.detail.add-to-cart' | trans }}"
                                               data-init-single-click>
                                                {{ 'page.detail.add-to-cart' | trans }}
                                            </a>
                                        {% endif %}
                                    </div>
                                {% endif %}
                            {% endblock %}
                        {% endembed %}
                    {% endfor %}
                {% endblock %}
            {% endembed %}
        </form>
        {% if (not data.products | length) %}
            <div class="{{ config.name }}__text text-center">
                <p> {{ 'product.set.detail.no-products' | trans }} </p>
            </div>
        {% endif %}
    {% endblock %}
{% endblock %}
