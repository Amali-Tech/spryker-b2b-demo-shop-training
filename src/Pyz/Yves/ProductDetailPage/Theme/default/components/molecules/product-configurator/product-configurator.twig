{% extends model('component') %}

{% define config = {
    name: 'product-configurator',
    tag: 'section'
} %}

{% define data = {
    product: required,
    maxQuantity: 10,
    isBundle: null,
    bundleItems: []
} %}

{% set options = [] %}
{% set brand = data.product.attributes.brand | default %}
{% set sku = data.product.sku %}
{% set availabilityWidget = '' %}
{% set isDisabled = data.product.idProductConcrete is empty or data.product.price is empty %}
{% set isProductAvailable = true %}

{% for index in 1..data.maxQuantity %}
    {% set options = options | merge([{
        label: index,
        value: index
    }]) %}
{% endfor %}

{% if widgetExists('AvailabilityWidgetPlugin') %}
    {% set isAvailable = widgetBlock('AvailabilityWidgetPlugin', 'isAvailable', data.product) %}
    {% set isDisabled = not isAvailable or isDisabled %}
{% endif %}

{% if widgetExists('ProductDiscontinuedWidgetPlugin') %}
    {% set isDiscontinued = widgetBlock('ProductDiscontinuedWidgetPlugin', 'isDiscontinued', sku) %}
    {% set isDisabled = isDiscontinued or isDisabled %}
    {% set isProductAvailable = not isDiscontinued %}
{% endif %}

{% block body %}
    {{ widgetBlock('ProductReviewWidgetPlugin', 'rating', data.product.idProductAbstract) }}

    {% if brand is not empty %}
        <div class="{{ config.name }}__brand-name">{{brand}}</div>
    {% endif %}

    <div class="{{ config.name }}__sku">{{ 'product.attribute.sku' | trans }}: {{sku}}</div>

    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
        {% if widgetExists('PriceProductVolumeWidgetPlugin') %}
            {{ widget('PriceProductVolumeWidgetPlugin', data.product) }}
        {% else %}
            {{ widget('PriceWidgetPlugin', data.product) }}
        {% endif %}
    {% endif %}

    {% if data.isBundle != null %}
        <div class="product-options__item js-product-options-bundle">
            <div class="product-options__title js-product-options-bundle__title active" data-toggle-target=".js-product-options-bundle__target">{{ 'bundle.title' | trans }}</div>
            <div class="js-product-options-bundle__target">
                <ul class="product-bundle product-bundle--configurator">
                    {% for item in data.bundleItems %}
                        <li class="product-bundle__item product-bundle__item--configurator">
                            <div class="product-bundle__img-block product-bundle__img-block--configurator">
                                <img src="{{ item.image }}" class="product-bundle__img">
                            </div>
                            <div class="product-bundle__info product-bundle__info--configurator">
                                <h4 class="product-bundle__name">{{ item.name }}</h4>
                                <span class="product-bundle__quantity">x {{ item.quantity }}</span>
                            </div>
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
        {% include molecule('toggler-accordion') with {
            attributes: {
                'wrap-selector': '.js-product-options-bundle',
                'trigger-selector': '.js-product-options-bundle__title',
                'class-to-toggle': 'is-hidden'
            }
        } only %}
    {% endif %}

    {{ widget('ProductGroupWidgetPlugin', data.product.idProductAbstract) }}

    {% include molecule('variant-configurator', 'ProductDetailPage') with {
        data: {
            superAttributes: data.product.attributeMap.superAttributes,
            selectedAttributes: data.product.selectedAttributes,
            availableAttributes: data.product.availableAttributes
        }
    } only %}

    <form method="POST" action="/cart/add/{{sku}}">
        {{ widget('ProductOptionWidgetPlugin', data.product) }}

        {% if is_granted('IS_AUTHENTICATED_FULLY') and isProductAvailable %}
            <div class="{{ config.name }}__add-to-cart">
                {% if widgetExists('ProductPackagingUnitWidgetPlugin') %}
                    {{ widget('ProductPackagingUnitWidgetPlugin', data.product, isDisabled, options) }}
                {% elseif widgetExists('ProductMeasurementUnitWidgetPlugin') %}
                    {{ widget('ProductMeasurementUnitWidgetPlugin', data.product, isDisabled, options) }}
                {% else %}
                    <div class="grid grid--stretch grid--justify">
                        {% include molecule('quantity-counter') with {
                            modifiers: ['right-space'],
                            attributes: {
                                name: 'quantity',
                                disabled: isDisabled
                            }
                        } only %}

                        <div class="col">
                            <button type="submit" class="button button--red button--big button--expand" {{ isDisabled ? 'disabled' : '' }} onclick="this.form.submit(); this.disabled='disabled'; return false;" {{qa('add-to-cart-button')}}>
                                {% include atom('icon') with {
                                    modifiers: ['cart-plus'],
                                    data: {
                                        name: 'cart-plus'
                                    }
                                } only %}
                                {{ 'page.detail.add-to-cart' | trans }}
                            </button>
                        </div>
                    </div>
                {% endif %}
            </div>

            {{ widget('MultiCartWidgetPlugin', data.product, isDisabled) }}
        {% endif %}

        {% if is_granted('IS_AUTHENTICATED_FULLY') %}
            {{ widget('AvailabilityWidgetPlugin', data.product) }}
        {% endif %}
    </form>

    {% if is_granted('IS_AUTHENTICATED_FULLY') %}
        {% if widgetExists('ShoppingListWidgetPlugin') and isProductAvailable %}
            {{ widget('ShoppingListWidgetPlugin', sku, isDisabled) }}
        {% endif %}
    {% endif %}

    {% if widgetExists('WishlistWidgetPlugin') and isProductAvailable %}
        {{ widget('WishlistWidgetPlugin', data.product) }}
    {% endif %}

    {% if widgetExists('ProductDiscontinuedWidgetPlugin') %}
        {{ widget('ProductDiscontinuedWidgetPlugin', sku) }}
    {% endif %}

{% endblock %}
