{% extends view('summary', '@SprykerShop:CheckoutPage') %}

{% define data = {
    stepNumder: 4,
} %}

{% block content %}
    {% for shipmentGroup in data.shipmentGroups %}
        <article class="grid grid--gap spacing-bottom spacing-bottom--big">
            <h3 class="col col--sm-12 title title--second spacing-bottom spacing-bottom--small">
                {{ 'page.checkout.shipment.shipment_group_heading' | trans({
                    '%current%': loop.index,
                    '%total%': loop.length
                }) }}
            </h3>
            <div class="col col--sm-12 col--xl-8">
                {% for item in shipmentGroup.items %}
                    {% set item = item.bundleProduct ?? item %}

                    {% embed molecule('product-item') with {
                        modifiers: ['checkout'],
                        data: {
                            list: data.cartItems,
                            listItem: item,
                            quantity: item.quantity,
                            priceModifiers: ['medium', 'block', 'margin-bottom-from-tablet'],
                        },
                    } only %}
                        {% block image %}
                            {% set imageUrl = data.listItem.images is not empty ? data.listItem.images[0].externalUrlLarge : null %}

                            {% include molecule('product-item-image') with {
                                modifiers: ['small'],
                                data: {
                                    name: data.listItem.name,
                                    image: imageUrl,
                                },
                            } only %}
                        {% endblock %}

                        {% block title %}
                            <h6 class="{{ config.name }}__title spacing spacing--reset">{{ data.listItem.name }}</h6>
                        {% endblock %}

                        {% block subQuantity %}
                            {% set salesUnitName = data.listItem.quantitySalesUnit.productMeasurementUnit.name | default %}

                            {% if salesUnitName is not empty and data.listItem.amount == 0 %}
                                {% include atom('quantity-option') with {
                                    class: 'col col--sm-12 col--md-auto',
                                    data: {
                                        value: data.listItem.quantity,
                                        precision: data.listItem.quantitySalesUnit.conversion,
                                        optionName: salesUnitName | trans,
                                    },
                                } only %}
                            {% endif %}

                            {% if data.listItem.amount != 0 %}
                                {% set amountSalesUnitName = data.listItem.amountSalesUnit.productMeasurementUnit.name | default %}

                                {% include atom('quantity-option') with {
                                    class: 'col col--sm-12 col--md-auto',
                                    data: {
                                        value: data.listItem.amount,
                                        precision: data.listItem.quantity,
                                        optionName: amountSalesUnitName | trans,
                                    },
                                } only %}
                            {% endif %}
                        {% endblock %}

                        {% block note %}
                            {% if data.listItem.cartNote is not empty %}
                                {% include molecule('cart-item-note', 'CartNoteWidget') ignore missing with {
                                    data: {
                                        isNoteNotEmpty: true,
                                        canWrite: false,
                                        label: 'cart_note.checkout_page.quote_note',
                                        note: data.listItem.cartNote,
                                    },
                                } only %}
                            {% endif %}
                        {% endblock %}

                        {% block bundle %}{% endblock %}
                    {% endembed %}
                {% endfor %}
            </div>

            <div class="col col--sm-12 col--xl-4">
                {% include molecule('summary-sidebar', 'CheckoutPage') with {
                    data: {
                        shipment: shipmentGroup.shipment,
                        canEdit: true,
                    },
                } only %}
            </div>
        </article>
    {% endfor %}

    <div class="grid grid--gap">
        <div class="col col--sm-12 col--lg-6">
            {% include molecule('summary-item-box', 'CheckoutPage') with {
                modifiers: ['mobile-border-top'],
                data: {
                    title: 'checkout.step.summary.payment' | trans,
                    method: data.paymentMethod,
                    iconName: data.paymentMethod | lower,
                    editUrl: 'checkout-payment',
                    canEdit: true,
                },
            } only %}
        </div>
        <div class="col col--sm-12 col--lg-6">
            {% include molecule('summary-item-box', 'CheckoutPage') with {
                data: {
                    title: 'checkout.step.summary.billing_address' | trans,
                    address: data.billingAddress,
                    editUrl: 'checkout-address',
                    canEdit: true,
                },
            } only %}
        </div>
    </div>

    <div class="grid">
        <div class="col col--sm-12">
            {% if data.cart.idQuote is not empty %}
                <div class="box box--medium">
                    {% widget 'CommentThreadWidget' args [
                        data.cart.idQuote,
                        'quote',
                        app.request.requestUri,
                        data.cart.commentThread,
                    ] only %}
                    {% endwidget %}
                </div>
            {% endif %}

            {% if data.transfer.cartNote %}
                {% include molecule('note-list', 'CartNoteWidget') ignore missing with {
                    data: {
                        label: 'cart_note.checkout_page.quote_note',
                        note: data.transfer.cartNote,
                    },
                } only %}
            {% endif %}

            {% include molecule('summary-voucher-form', 'CheckoutPage') with {
                data: {
                    transfer: data.transfer,
                },
            } only %}

            {% embed molecule('form') with {
                modifiers: ['checkout-form'],
                data: {
                    form: data.forms.summary,
                    submit: {
                        enable: true,
                        text: 'checkout.step.place.order' | trans,
                        class: 'form__action--expand-sm-md button button--big',
                    },
                    cancel: {
                        enable: true,
                        url: data.backUrl,
                        text: 'general.back.button' | trans,
                        icon: '',
                        class: 'form__action--expand-sm-md button button--big button--hollow-icon button--back',
                    },
                },
                embed: {
                    overview: data.overview,
                },
            } only %}
                {% block body %}
                    {% include molecule('summary-overview', 'CheckoutPage') with {
                        data: embed.overview,
                    } only %}

                    {{ parent() }}
                {% endblock %}
            {% endembed %}
        </div>
    </div>
{% endblock %}
