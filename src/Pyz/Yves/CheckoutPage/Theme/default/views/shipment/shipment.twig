{% extends view('shipment', '@SprykerShop:CheckoutPage') %}

{% define data = {
    stepNumder: 2,
    products: _view.products,
    currentLanguage: _view.currentLanguage,
} %}

{% block content %}
    {% embed molecule('form') with {
        modifiers: ['checkout-form'],
        data: {
            form: data.forms.shipment,
            cart: data.forms.shipment.vars.data,
            attributes: [],
            options: {
                attr: {
                    id: 'payment-form',
                },
            },
            submit: {
                enable: true,
                text: 'checkout.step.payment' | trans,
                class: 'form__action--expand-sm-md button button--big',
            },
            cancel: {
                enable: true,
                url: data.backUrl,
                text: 'general.back.button' | trans,
                icon: '',
                class: 'form__action--expand-sm-md button button--big button--hollow-icon button--back',
            },
        },
        embed: {
            currentLanguage: data.currentLanguage,
            products: data.products,
        },
    } only %}
        {% block fieldset %}
            {% set shipmentGroupCollectionForm = data.form.shipmentGroups | default %}

            <div class="grid">
                {% for shipmentGroupForm in shipmentGroupCollectionForm %}
                    {% if shipmentGroupForm.hash is defined %}
                        {% do shipmentGroupForm.hash.setRendered %}
                    {% endif %}

                    <article class="col col--sm-12 grid grid--gap spacing-bottom spacing-bottom--big">
                        <h3 class="col col--sm-12 title title--second spacing-bottom spacing-bottom--small">
                            {{ 'page.checkout.shipment.shipment_group_heading' | trans({
                                '%current%': loop.index,
                                '%total%': loop.length
                            }) }}
                        </h3>

                        <div class="col col--sm-12 col--xl-8">
                            {% for item in shipmentGroupForm.vars.data.items %}
                                {% set item = item.bundleProduct ?? item %}

                                {% embed molecule('product-item') with {
                                    modifiers: ['checkout'],
                                    data: {
                                        list: shipmentGroupForm.vars.data.items,
                                        listItem: item,
                                        quantity: item.quantity,
                                        priceModifiers: ['medium', 'margin-bottom-from-tablet'],
                                    },
                                    embed: {
                                        product: embed.products[item.sku],
                                    },
                                } only %}
                                    {% block image %}
                                        {% set imageUrl = data.listItem.images is not empty ? data.listItem.images[0].externalUrlLarge : null %}

                                        {% include molecule('product-item-image') with {
                                            modifiers: ['small'],
                                            data: {
                                                name: data.listItem.name,
                                                image: imageUrl,
                                            },
                                        } only %}
                                    {% endblock %}

                                    {% block title %}
                                        <h6 class="{{ config.name }}__title spacing spacing--reset">{{ data.listItem.name }}</h6>
                                    {% endblock %}

                                    {% block info %}
                                        {{ parent() }}

                                        {% if embed.product.attributes.farbe is defined %}
                                            <span class="{{ config.name }}__color-preview">
                                                {{ 'cart.item.color' | trans }}:
                                                <span class="{{ config.name }}__color-preview-decoration" style="background: {{ embed.product.colorCode  }}" title="{{ embed.product.attributes.farbe  }}"></span>
                                            </span>
                                        {% endif %}
                                    {% endblock %}

                                    {% block note %}
                                        {% if data.listItem.cartNote is not empty %}
                                            {% include molecule('cart-item-note', 'CartNoteWidget') ignore missing with {
                                                data: {
                                                    isNoteNotEmpty: true,
                                                    canWrite: false,
                                                    label: 'cart_note.checkout_page.quote_note',
                                                    note: data.listItem.cartNote,
                                                },
                                            } only %}
                                        {% endif %}
                                    {% endblock %}

                                    {% block bundle %}{% endblock %}
                                {% endembed %}
                            {% endfor %}
                        </div>

                        <div class="col col--sm-12 col--xl-4">
                            {% include molecule('shipment-sidebar', 'CheckoutPage') with {
                                data: {
                                    shipment: shipmentGroupForm.shipment,
                                    currentLanguage: embed.currentLanguage,
                                },
                            } only %}
                        </div>
                    </article>
                {% endfor %}
            </div>
        {% endblock %}
    {% endembed %}
{% endblock %}
