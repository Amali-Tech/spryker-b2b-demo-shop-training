{% extends molecule('address-item-form-field-list', '@SprykerShop:CheckoutPage') %}

{% define data = {
    products: required,
} %}

{% block body %}
    {% set companyBusinessUnitShippingAddressWidget = findWidget('CompanyBusinessUnitAddressWidget', ['shippingAddress', data.shippingForm.vars.data]) %}
    {% set isCompanyBusinessUnitShippingAddressApplicable = companyBusinessUnitShippingAddressWidget and companyBusinessUnitShippingAddressWidget.isApplicable %}

    {% for item in data.items %}
        <div class="{{ config.name }}__wrapper grid grid--middle {{ config.jsName }}__item-shipping-{{ loop.index }}">
            {% set hasShippingAddresses = item.shippingAddress.id_customer_address is defined %}
            {% set hasCompanyUnitAddresses = item.shippingAddress.id_company_unit_address is defined %}
            {% set hasShippingAddressesAndApplicable = isCompanyBusinessUnitShippingAddressApplicable ? true : hasShippingAddresses %}

            {% embed molecule('product-item') with {
                modifiers: ['checkout', 'checkout-address'],
                data: {
                    listItem: item.vars.data,
                    quantity: item.vars.data.quantity,
                    priceModifiers: ['medium', 'margin-bottom-from-tablet'],
                },
                embed: {
                    jsName: config.jsName,
                    item: item,
                    index: loop.index,
                    hasShippingAddressesAndApplicable: hasShippingAddressesAndApplicable,
                    companyBusinessUnitShippingAddressWidget: companyBusinessUnitShippingAddressWidget,
                    isCompanyBusinessUnitShippingAddressApplicable: isCompanyBusinessUnitShippingAddressApplicable,
                    hasShippingAddresses: hasShippingAddresses,
                    hasCompanyUnitAddresses: hasCompanyUnitAddresses,
                    configName: config.name,
                    product: data.products[item.vars.data.sku],
                },
            } only %}
                {% block image %}
                    {% set imageUrl = data.listItem.images is not empty ? data.listItem.images[0].externalUrlLarge : null %}

                    {% include molecule('product-item-image') with {
                        modifiers: ['small'],
                        data: {
                            name: data.listItem.name,
                            image: imageUrl,
                        },
                    } only %}
                {% endblock %}

                {% block title %}
                    <h6 class="{{ config.name }}__title spacing spacing--reset">{{ data.listItem.name }}</h6>
                {% endblock %}

                {% block info %}
                    {{ parent() }}

                    {% if embed.product.attributes.farbe is defined %}
                        <span class="{{ config.name }}__color-preview">
                            {{ 'cart.item.color' | trans }}:
                            <span class="{{ config.name }}__color-preview-decoration" style="background: {{ embed.product.colorCode  }}" title="{{ embed.product.attributes.farbe  }}"></span>
                        </span>
                    {% endif %}
                {% endblock %}

                {% block productTotal %}
                    <div class="{{ embed.configName }}__price">{{ parent() }}</div>

                    <div class="{{ embed.configName }}__dropdown">
                        {% if embed.hasShippingAddressesAndApplicable %}
                            {% if embed.isCompanyBusinessUnitShippingAddressApplicable %}
                                {% widget embed.companyBusinessUnitShippingAddressWidget with {
                                    data: {
                                        itemShippingTriggerJsClass: embed.jsName ~ '__trigger ' ~ embed.jsName ~ '__trigger--' ~ embed.index,
                                    },
                                    embed: {
                                        index: embed.index,
                                        item: embed.item,
                                        jsName: embed.jsName,
                                    },
                                } only %}
                                    {% block addressHandler %}
                                        {% set index0 = embed.index - 1 %}
                                        {% include molecule('company-business-unit-address-handler', 'CompanyWidget') ignore missing with {
                                            attributes: {
                                                'form-selector': '.' ~ embed.jsName ~ '__item-shipping-' ~ embed.index,
                                                'data-selector': '.' ~ embed.jsName ~ '__trigger--' ~ embed.index,
                                                'default-address-selector': '.' ~ embed.jsName ~ '__default-address-item-shipping-' ~ embed.index,
                                                'address-hidden-input-selector': '[name="addressesForm[multiShippingAddresses][' ~ index0 ~ '][shippingAddress][id_customer_address]"]',
                                                'company-address-hidden-input-selector': '[name="addressesForm[multiShippingAddresses][' ~ index0 ~ '][shippingAddress][id_company_unit_address]"]',
                                                'addresses': data.addresses,
                                            },
                                        } only %}
                                    {% endblock %}

                                    {% block hiddenFields %}
                                        {% set index0 = embed.index - 1 %}
                                        <input type="hidden" name="addressesForm[multiShippingAddresses][{{ index0 }}][shippingAddress][id_customer_address]">
                                        <input type="hidden" name="addressesForm[multiShippingAddresses][{{ index0 }}][shippingAddress][id_company_unit_address]">
                                        <input type="hidden" class="{{ embed.jsName }}__default-address-item-shipping-{{ embed.index }}" value="{{ defaultAddressKey }}">
                                    {% endblock %}
                                {% endwidget %}

                                {% if embed.hasShippingAddresses %}
                                    {% do embed.item.shippingAddress.id_customer_address.setRendered %}
                                {% endif %}

                                {% if embed.hasCompanyUnitAddresses %}
                                    {% do embed.item.shippingAddress.id_company_unit_address.setRendered %}
                                {% endif %}
                            {% endif %}

                            {% if not embed.isCompanyBusinessUnitShippingAddressApplicable %}
                                {{ form_row(embed.item.shippingAddress.id_customer_address, {
                                    label: 'page.checkout.address.delivery.address_select' | trans,
                                    attr: {
                                        class: embed.jsName ~ '__trigger ' ~ embed.jsName ~ '__trigger--' ~ loop.index,
                                    },
                                }) }}
                            {% endif %}
                        {% endif %}
                    </div>
                {% endblock %}

                {% block note %}
                    {% if data.listItem.cartNote is not empty %}
                        {% include molecule('cart-item-note', 'CartNoteWidget') ignore missing with {
                            data: {
                                isNoteNotEmpty: true,
                                canWrite: false,
                                label: 'cart_note.checkout_page.quote_note',
                                note: data.listItem.cartNote,
                            },
                        } only %}
                    {% endif %}
                {% endblock %}

                {% block bundle %}{% endblock %}
            {% endembed %}

            <div class="col col--sm-12">
                {% set itemClass = config.name ~ '__content ' ~ config.name ~ '__content--mobile-background ' ~ config.jsName ~ '__item-shipping '
                    ~ config.jsName ~ '__item-shipping--' ~ loop.index ~ (hasShippingAddressesAndApplicable ? ' is-hidden ') ~ ' spacing-x spacing-x--inner spacing-x--reset' %}

                {% include molecule('form') with {
                    class: itemClass,
                    data: {
                        form: item.shippingAddress,
                        enableStart: false,
                        enableEnd: false,
                        layout: {
                            salutation: 'col col--sm-12 col--lg-4',
                            first_name: 'col col--sm-12 col--lg-4',
                            last_name: 'col col--sm-12 col--lg-4',
                            address1: 'col col--sm-12 col--lg-8',
                            address2: 'col col--sm-12 col--lg-4',
                            zip_code: 'col col--sm-12 col--lg-4',
                            city: 'col col--sm-12 col--lg-4',
                            iso2_code: 'col col--sm-12 col--lg-4',
                        },
                    },
                } only %}

                {% if hasShippingAddressesAndApplicable %}
                    {% include molecule('address-form-toggler', 'CustomerPage') ignore missing with {
                        attributes: {
                            'trigger-selector': '.' ~ config.jsName ~ '__trigger--' ~ loop.index,
                            'target-selector': '.' ~ config.jsName ~ '__item-shipping--' ~ loop.index,
                        },
                    } only %}
                {% endif %}
            </div>
        </div>
    {% endfor %}

    {% include molecule('is-next-checkout-step-enabled', 'CheckoutPage') with {
        attributes: {
            'trigger-selector': isCompanyBusinessUnitShippingAddressApplicable ? '.' ~ data.jsAddressClass ~ '__form-select-shippingAddress' : '[name="addressesForm[shippingAddress][id_customer_address]"]',
            'target-selector': '.' ~ config.jsName ~ '__validate-next-checkout-step',
        },
    } only %}

    {% include molecule('validate-next-checkout-step', 'CheckoutPage') with {
        class: config.jsName ~ '__validate-next-checkout-step',
        attributes: {
            'container-selector': '.' ~ config.jsName ~ '__item-shipping',
            'target-selector': '.' ~ data.jsAddressClass ~ '__form-submit',
            'dropdown-trigger-selector': '.' ~ config.jsName ~ '__trigger',
            'is-enable': false,
        },
    } only %}
{% endblock %}
