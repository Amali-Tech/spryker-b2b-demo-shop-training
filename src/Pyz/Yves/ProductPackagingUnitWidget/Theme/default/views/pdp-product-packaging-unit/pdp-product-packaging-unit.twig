{% extends template('widget') %}

{% define data = {
    product: _widget.product,
    quantityOptions: _widget.quantityOptions,
    baseUnit: _widget.baseUnit | default,
    salesUnits: _widget.salesUnits | default([]),
    leadProductSalesUnits: _widget.leadProductSalesUnits | default([]),
    salesUnitCount : _widget.salesUnits|length,
    productPackagingUnit: _widget.productPackagingUnit,
    isAddToCartDisabled : _widget.isAddToCartDisabled | default(false),
    packagingUnitDefaultAmount: _widget.productPackagingUnit.defaultAmount | default(0),
    packagingUnitIsVariable: _widget.productPackagingUnit.isVariable | default(false),
    isAmountBlockEnabled: _widget.isAmountBlockEnabled | default(false),
    jsonScheme: _widget.jsonScheme | default(''),
    minQuantityInBaseUnit: _widget.minQuantityInBaseUnit,
    minQuantityInSalesUnits: _widget.minQuantityInSalesUnits,
} %}

{% block body %}

    <div class="product-packaging-new-price is-hidden" id="product-packaging-new-price-block">
        <span>{{ "measurement_units.new-price" | trans}}:</span>
        <div id="product-packaging-new-price-value-block"></div>
    </div>
    <input id="item-base-price"
           type="hidden"
           value="{{ data.product.price }}"
    />
    <input id="item-money-symbol"
           type="hidden"
           value="{{  moneySymbol() }}"
    />

    {% if data.salesUnitCount %}
        <div class="grid grid--justify">
            <div class="col measurement-unit">
                <div class="measurement-unit__label">
                    {{ 'packaging_units.pdp.quantity' | trans }}:
                </div>
                <div class="measurement-unit__value">
                    <input id="sales-unit-quantity" class="input input--small input--measurement-unit" type="number" value="{{ data.minQuantityInSalesUnits }}" name="sales-unit-quantity"/>
                    <input id="base-unit-quantity" type="hidden" value="{{ data.minQuantityInBaseUnit }}" name="quantity"/>
                </div>
            </div>
            <div class="col measurement-unit">
                <div class="measurement-unit__label">
                    {{ 'packaging_units.pdp.sales-units' | trans }}:
                </div>
                <div class="measurement-unit__value">
                    {% embed atom('custom-select') with {
                        modifiers: ['flexible-width', 'measurement-unit'],
                        attributes: {
                            name: 'id-product-measurement-sales-unit',
                            'selectWidth': 'resolve'
                        },
                        embed: {
                            salesUnits: data.salesUnits
                        }
                    } only %}
                        {% block selectClass %}{{ parent() }} select-measurement-unit{% endblock %}

                        {% block options %}
                            {% for salesUnit in embed.salesUnits %}
                                <option value="{{ salesUnit.idProductMeasurementSalesUnit }}" {{ (salesUnit.isDefault) ? 'selected' : '' }}>{{ salesUnit.productMeasurementUnit.name | trans }}</option>
                            {% endfor %}
                        {% endblock %}
                    {% endembed %}
                </div>
            </div>
        </div>
    {% else %}
        <div class="grid grid--stretch grid--justify">
            {% include molecule('quantity-counter') with {
                modifiers: ['right-space'],
                readOnly: true
            } only %}
            <div class="col col--expand">
                <button type="submit" id="add-to-cart-button" class="button button--red button--big button--expand" {{ data.isAddToCartDisabled ? 'disabled' : '' }} onclick="this.form.submit(); this.disabled='disabled'; return false;" {{ qa('add-to-cart-button') }}>
                    {% include atom('icon') with {
                        modifiers: ['cart-plus'],
                        data: {
                            name: 'cart-plus'
                        }
                    } only %}
                    {{ 'page.detail.add-to-cart' | trans }}
                </button>
            </div>
        </div>
    {% endif %}

    <div class="text-small is-hidden measurement-unit-choice">
        <div class="measurement-unit-notifications">
            <div id="quantity-between-units" class="is-hidden">
                <span>{{ "measurement_units.recommendation.between-units-info" | trans }} (<span id="current-choice"></span>)</span>
            </div>
            <div id="minimum-quantity" class="is-hidden">
                <span>{{ "measurement_units.recommendation.min-violation" | trans }}</span>
            </div>
            <div id="maximum-quantity" class="is-hidden">
                <span>{{  "measurement_units.recommendation.max-violation" | trans }}</span>
            </div>
        </div>

        <div id="measurement-unit-choices">
            <span>{{ "measurement_units.recommendation.suggestion" | trans}}:</span>
            <div class="list measurement-unit-choice__list"></div>
        </div>
    </div>

    {% if data.isAmountBlockEnabled %}
        <div class="grid grid--justify">
            <div class="col measurement-unit">
                <div class="measurement-unit__label">
                    {{ 'packaging_units.pdp.amount' | trans }}:
                </div>
                <div class="measurement-unit__value">
                    <input id="user-amount"
                           class="input input--small input--measurement-unit"
                           type="number"
                           value="{{ data.productPackagingUnit.defaultAmount }}"
                           {% if not data.packagingUnitIsVariable %}disabled{% endif %}
                           name="amount-sales-unit[{{ data.product.sku }}]"
                    />
                    <input id="default-amount"
                           type="hidden"
                           value="{{ data.productPackagingUnit.defaultAmount }}"
                    />
                    <input id="amount"
                           type="hidden"
                           value="{{ data.productPackagingUnit.defaultAmount }}"
                           name="amount[{{ data.product.sku }}]"
                    />
                </div>
            </div>
            <div class="col measurement-unit">
                <div class="measurement-unit__label">
                    {{ 'packaging_units.pdp.sales-units' | trans }}:
                </div>
                <div class="measurement-unit__value">
                    {{ 'product.measurement.sales_unit' | trans }}
                    {% embed atom('custom-select') with {
                        modifiers: ['flexible-width', 'measurement-unit'],
                        attributes: {
                            name: "amount-id-product-measurement-sales-unit[" ~ data.product.sku ~ "]"
                        },
                        embed: {
                            salesUnits: data.leadProductSalesUnits
                        }
                    } only %}
                        {% block selectClass %}select-lead-measurement-unit{% endblock %}
                        {% block options %}
                            {% for salesUnit in embed.salesUnits %}
                                <option value="{{ salesUnit.idProductMeasurementSalesUnit }}" {{ (salesUnit.isDefault) ? 'selected' : '' }}>{{ salesUnit.productMeasurementUnit.name | trans }}</option>
                            {% endfor %}
                        {% endblock %}
                    {% endembed %}
                </div>
            </div>
        </div>
    {% endif %}


    {% if data.salesUnitCount %}

        {% include molecule('packaging-unit-quantity-selector', 'ProductPackagingUnitWidget') with {
            data: {
                json: data.jsonScheme
            }
        } only %}

        <div class="text-small is-hidden packaging-unit-choice">

            <div class="packaging-unit-notifications">
                <div id="amount-between-units" class="is-hidden">
                    <span>{{ "packaging_units.recommendation.between-units-info" | trans }} (<span id="amount-current-choice"></span>)</span>
                </div>
                <div id="packaging-amount-min" class="is-hidden">
                    <span>{{ "packaging-units.recommendation.amount-min-violation" | trans }}</span>
                </div>
                <div id="packaging-amount-max" class="is-hidden">
                    <span>{{ "packaging-units.recommendation.amount-max-violation" | trans }}</span>
                </div>
                <div id="packaging-amount-interval" class="is-hidden">
                    <span>{{ "packaging-units.recommendation.amount-interval-violation" | trans }}</span>
                </div>
            </div>

            <div id="packaging-unit-choices">
                <span>{{ "packaging_units.recommendation.suggestion" | trans}}</span>
                <ul class="list"></ul>
            </div>
        </div>
    {% endif %}

    {% if data.salesUnitCount %}
        <button type="submit" id="add-to-cart-button" class="button button--red button--big button--expand" {{ data.isAddToCartDisabled ? 'disabled' : '' }} onclick="this.form.submit(); this.disabled='disabled'; return false;" {{ qa('add-to-cart-button') }}>
            {% include atom('icon') with {
                modifiers: ['cart-plus'],
                data: {
                    name: 'cart-plus'
                }
            } only %}
            {{ 'page.detail.add-to-cart' | trans }}
        </button>
    {% endif %}

    {% set translations = [] %}
    {% for key, salesUnit in data.salesUnits %}
        {% set translations = translations | merge({(salesUnit.productMeasurementUnit.code) : (salesUnit.productMeasurementUnit.name | trans)}) %}
    {% endfor %}

    <script type="application/json" id="measurement-unit-translation">{{ translations|json_encode|raw }}</script>

{% endblock body %}
