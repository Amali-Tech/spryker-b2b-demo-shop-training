{% extends model('component') %}

{% define config = {
    name: 'quick-order-file-upload',
    tag: 'quick-order-file-upload'
} %}

{% define data = {
    uploadOrderForm: required,
    fileTemplateExtensions: null
} %}

{% define attributes = {
    'input-file': '#' ~ data.uploadOrderForm.children.fileUploadOrder.vars.id
} %}

{% block body %}
    <div class="{{ config.name }}__content">
        <h5 class="{{ config.name }}__title {{ config.name }}__title--space-bottom">{{ 'quick-order.file-upload-order.title' | trans }}</h5>
        {% embed molecule('form') with {
            modifiers: ['browse-file'],
            data: {
                form: data.uploadOrderForm,
                enableStart: false,
                enableEnd: false
            },
            embed: {
                fileTemplateExtensions: data.fileTemplateExtensions,
                parentClass: config.name,
                parentJsClass: config.jsName
            }
        } only %}
            {% block fields %}
                {{ parent() }}

                <label class="label label--browse-file spacing-bottom spacing-bottom--reset" for="{{ data.form.children.fileUploadOrder.vars.id }}">
                    <span class="{{ embed.parentClass }}__browse-file-info">
                        {% include atom('icon') with {
                            class: 'spacing-bottom',
                            modifiers: ['browse-file'],
                            data: {
                                name: 'browse-file'
                            }
                        } only %}

                        <span class="{{ embed.parentClass }}__file-select">
                            <span class="{{ embed.parentJsClass }}__file-select">
                                No file selected. Browse file
                            </span>
                            {% include atom('icon') with {
                                class: 'is-hidden ' ~ embed.parentJsClass ~ '__remove-file',
                                modifiers: ['small', 'remove-file'],
                                data: {
                                    name: 'cross'
                                }
                            } only %}
                        </span>

                        {% if(embed.fileTemplateExtensions is not null) %}
                            {% set filteTemplatesExt = '' %}

                            <span class="{{ embed.parentJsClass }}__file-extension">
                                Only
                                {% for fileTemplateExt in embed.fileTemplateExtensions %}
                                    {% set fileExt = (loop.last == false) ? '.' ~ fileTemplateExt ~ ', ' : '.' ~ fileTemplateExt %}
                                    <strong>{{ fileExt }}</strong>
                                {% endfor %}
                                files accepted
                            </span>
                        {% endif %}
                    </span>
                </label>
            {% endblock %}
        {% endembed %}

        <button type="submit" name="uploadOrder" class="button button--success spacing-top spacing-top--big">
            {{ 'quick-order.file-upload-order.button.upload' | trans }}
        </button>

        {% if data.fileTemplateExtensions %}
            <div class="grid grid--gap grid--center spacing-top">
                {% for fileTemplateExt in data.fileTemplateExtensions %}
                    <div class="col col--sm-10 spacing-top">
                        <a class="{{ config.name }}__download-link" href="{{ path('quick-order/download-template', {'file-type': fileTemplateExt}) }}">
                            {% include atom('icon') with {
                                modifiers: ['download-file'],
                                data: {
                                    name: 'download-file'
                                }
                            } only %}

                            {{ 'quick-order.file-upload-order.file-template-download-message' | trans({'%template%': fileTemplateExt})}}
                        </a>
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    </div>
{% endblock %}
