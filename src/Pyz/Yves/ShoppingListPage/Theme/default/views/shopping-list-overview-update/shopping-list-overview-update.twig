{% extends template('page-layout-shopping-list', 'ShoppingListPage') %}

{% define data = {
    title: _view.shoppingList.name,
    form: _view.shoppingListForm,
    shoppingList: _view.shoppingList,
    shoppingListItemProducts: _view.shoppingListItemProducts,
    idShoppingList: _view.shoppingList.idShoppingList | default
} %}

{% block breadcrumbs %}
    {% include molecule('breadcrumb') with {
        data: {
            steps: [{
                label: 'customer.account' | trans,
            },{
                label: 'customer.account.shopping_list' | trans,
            },{
                label: 'customer.account.shopping_list.overview.edit' | trans,
            }]
        }
    } only %}
{% endblock %}

{% block customerNavigation %}
    {{ widgetGlobal('CustomerNavigationWidgetPlugin', 'shoppingList', data.idShoppingList) }}
{% endblock %}

{% block customerContent %}

    {% set hasWritePermission = can('WriteShoppingListPermissionPlugin', data.idShoppingList) %}
    <div class="form" data-qa="component form">
        {{ form_start(data.form) }}

        {{ form_errors(data.form) }}

        <div class="grid grid--bottom">
            {{ form_row(data.form.idShoppingList) }}

            {{ form_row(data.form.name, {
                rowAttr: {
                    class: 'col col--sm-12'
                }
            }) }}

            <div class="col col--sm-12">
                <div class="shopping-list-overview-table--update-head grid grid--left grid--middle">
                    <div class="col grid grid--middle spacing-right spacing-right--bigger">
                        <strong class="spacing-right">{{ 'customer.account.shopping_list.overview.owner' | trans }}:</strong>
                        {{ data.shoppingList.owner }}
                    </div>
                    <strong>{{ 'customer.account.shopping_list.access' | trans }}:</strong>
                    <span class="badge badge--shopping-list badge--access spacing-x">
                        {% include molecule('shopping-list-permission', 'ShoppingListPage') with {
                            modifiers: ['badge'],
                            data: {
                                hasWritePermission: hasWritePermission
                            }
                        } only %}
                    </span>
                </div>
            </div>

            <div class="col col--sm-12">
                {% if data.shoppingList.items is not empty %}
                    {% for key, shoppingListItem in data.shoppingList.items %}
                        {% set product = data.shoppingListItemProducts[shoppingListItem.idShoppingListItem] %}
                        {% set isProductAvailable = product.available is defined and product.available and product.price is defined and product.price is not null %}
                        {% if widgetExists('ProductDiscontinuedWidgetPlugin') %}
                            {% set isDiscontinued = widgetBlock('ProductDiscontinuedWidgetPlugin', 'isDiscontinued', product.sku) %}
                            {% set isProductAvailable = not isDiscontinued and isProductAvailable %}
                        {% endif %}

                        {% embed molecule('product-item') with {
                            modifiers: ['shopping-list'],
                            data: {
                                listItem: product,
                                imageModifiers: ['shopping-list']
                            },
                            embed: {
                                isItemAvailable: isProductAvailable,
                                idShoppingList: data.idShoppingList
                            }
                        } only %}
                            {% block title %}
                                <span class="{{ config.name }}__available">
                                    {% if embed.isItemAvailable %}
                                        {{ 'customer.account.shopping_list.available' | trans }}
                                    {% else %}
                                        {% if widgetExists('ProductDiscontinuedWidgetPlugin') %}
                                            {{ widget('ProductDiscontinuedWidgetPlugin', data.listItem.sku) }}
                                        {% else %}
                                            {{ 'customer.account.shopping_list.not_available' | trans }}
                                        {% endif %}
                                    {% endif %}
                                </span>
                                {{ parent() }}
                            {% endblock %}

                            {% block itemAttributes %}
                                <ul class="list spacing-y spacing-y--big">
                                    {% for attribute in data.listItem.superAttributesDefinition %}
                                        {% if data.listItem.attributes[attribute] is defined %}
                                            <li class="list__item list__item--inline spacing-right spacing-right--bigger">
                                                <strong>{{- ('product.attribute.' ~ attribute) | trans -}}: </strong>
                                                {% if ('product.attribute.' ~ attribute) | trans == 'Color' %}
                                                    <span class="{{ config.name}}__color text-secondary" style="background-color: {{ data.listItem.attributes[attribute] }}">
                                                        {{ data.listItem.attributes[attribute] }}
                                                    </span>
                                                {% else %}
                                                    <span class="text-secondary">
                                                        {{ data.listItem.attributes[attribute] }}
                                                    </span>
                                                {% endif %}
                                            </li>
                                        {% endif %}
                                    {% endfor %}
                                </ul>
                            {% endblock %}

                            {% block price %}
                                {% if data.listItem.price is not empty %}
                                    {% include molecule('price') with {
                                        modifiers: ['cart'],
                                        data: {
                                            amount: data.listItem.price | money,
                                            originalAmount: data.listItem.prices.ORIGINAL is not defined or data.listItem.prices.ORIGINAL is empty ? null : (data.listItem.prices.ORIGINAL | money)
                                        }
                                    } only %}
                                {% else %}
                                    {{ 'product_alternative_widget.not_applicable' | trans }}
                                {% endif %}
                            {% endblock %}

                            {% block quantity %}
                                {% include molecule('quantity-counter') with {
                                    modifiers: ['shopping-list'],
                                    data: {
                                        isReadOnly: not embed.isItemAvailable
                                    },
                                    attributes: {
                                        name: 'shoppingListItem[quantity][' ~ data.listItem.idShoppingListItem ~ ']',
                                        value: data.listItem.quantity
                                    }
                                } only %}
                            {% endblock %}

                            {% block deleteButton %}
                                <div class="col">
                                    <a class="link link--icon" href="{{ path('shopping-list/remove-item', {
                                        idShoppingList: embed.idShoppingList, idShoppingListItem: data.listItem.idShoppingListItem
                                    }) }}">
                                        {% include atom('icon') with {
                                            modifiers: ['link'],
                                            data: {
                                                name: 'delete'
                                            }
                                        } only %}
                                        {{'customer.account.shopping_list.remove' | trans}}
                                    </a>
                                </div>
                            {% endblock %}
                        {% endembed %}

                        {% if can('WriteShoppingListPermissionPlugin', data.shoppingList.idShoppingList) and widgetExists('ProductAlternativeWidgetPlugin') %}
                            {{ widget('ProductAlternativeWidgetPlugin', product, data.shoppingList) }}
                        {% endif %}
                    {% endfor %}
                {% else %}
                    <div class="col col--sm-12 text-center">
                        {{ 'customer.account.shopping_list.empty' | trans }}
                    </div>
                {% endif %}
            </div>
        </div>

        <div class="grid">
            <div class="col col--sm-6 text-left">
                <a class="button button--alert button--hollow" href="{{ path('shopping-list/delete/confirm', {idShoppingList: data.idShoppingList}) }}">{{ 'customer.account.shopping_list.overview.delete' | trans }}</a>
            </div>
            <div class="col col--sm-6 text-right">
                <a href="{{ path('shopping-list') }}" class="button button--hollow spacing-right">
                    {{ 'general.back.button' | trans }}
                </a>
                <button type="submit" class="button button--success">
                    {{ 'forms.submit-btn' | trans }}
                </button>
            </div>
        </div>

        {% do data.form.items.setRendered %}

        {{ form_end(data.form) }}
    </div>
{% endblock %}
