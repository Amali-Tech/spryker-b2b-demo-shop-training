{% extends model('component') %}

{% define config = {
    name: 'shopping-list-table'
} %}

{% define data = {
    shoppingList: required,
    shoppingListItems: required
} %}

{% block body %}
    {% for item in data.shoppingListItems %}
        {% set isItemAvailable = item.available is defined and item.available and item.price is defined and item.price is not null %}
        {% if widgetExists('ProductDiscontinuedWidgetPlugin') %}
            {% set isDiscontinued = widgetBlock('ProductDiscontinuedWidgetPlugin', 'isDiscontinued', item.sku) %}
            {% set isItemAvailable = not isDiscontinued and isItemAvailable %}
        {% endif %}
        {% embed molecule('product-item') with {
            modifiers: ['shopping-list', isItemAvailable ? '' : 'hidden'],
            data: {
                listItem: item,
                imageModifiers: ['shopping-list']
                },
            embed: {
                isItemAvailable: isItemAvailable,
            }
        } only %}
            {% block image %}
                <div class="grid grid--justify grid--stretch {{ config.name }}__checkbox">
                    <div class="col {{ config.name }}__checkbox-col">
                        {% include atom('checkbox') with {
                            modifiers: ['shopping-list'],
                            attributes: {
                                name: 'shoppingListItem[idShoppingListItem][' ~ data.listItem.idShoppingListItem ~ ']',
                                value: data.listItem.idShoppingListItem,
                                disabled: not embed.isItemAvailable,
                            }
                        } only %}
                    </div>
                    <div class="col col--expand">
                        {{ parent(data.listItem) }}
                    </div>
                </div>
            {% endblock %}

            {% block title %}
                <span class="{{ config.name }}__available">
                    {% if embed.isItemAvailable %}
                        {{ 'customer.account.shopping_list.available' | trans }}
                    {% else %}
                        {% if widgetExists('ProductDiscontinuedWidgetPlugin') %}
                            {{ widget('ProductDiscontinuedWidgetPlugin', data.listItem.sku) }}
                        {% else %}
                            {{ 'customer.account.shopping_list.not_available' | trans }}
                        {% endif %}
                    {% endif %}
                </span>
                {{ parent() }}
            {% endblock %}

            {% block itemAttributes %}
                <ul class="list spacing-y spacing-y--big">
                    {% for attribute in data.listItem.superAttributesDefinition %}
                        {% if data.listItem.attributes[attribute] is defined %}
                            <li class="list__item list__item--inline spacing-right--biggest">
                                <strong>{{- ('product.attribute.' ~ attribute) | trans -}}: </strong>
                                {% if ('product.attribute.' ~ attribute) | trans == 'Color' %}
                                    <span class="{{ config.name}}__color text-secondary" style="background-color: {{ data.listItem.attributes[attribute] }}">
                                        {{ data.listItem.attributes[attribute] }}
                                    </span>
                                {% else %}
                                    <span class="text-secondary">
                                        {{ data.listItem.attributes[attribute] }}
                                    </span>
                                {% endif %}
                            </li>
                        {% endif %}
                    {% endfor %}

                    {{ widget('ShoppingListItemNoteWidgetPlugin', data.listItem.shoppingListItem) }}

                    {{ widget('ShoppingListItemProductOptionWidgetPlugin', data.listItem.shoppingListItem) }}
                </ul>
            {% endblock %}

            {% block price %}
                {% if data.listItem.price is not empty %}
                    {% include molecule('price') with {
                        modifiers: ['cart'],
                        data: {
                            amount: data.listItem.price | money,
                            originalAmount: data.listItem.prices.ORIGINAL is not defined or data.listItem.prices.ORIGINAL is empty ? null : (data.listItem.prices.ORIGINAL | money)
                        }
                    } only %}
                {% else %}
                    {{ 'product_alternative_widget.not_applicable' | trans }}
                {% endif %}
            {% endblock %}

            {% block quantity %}
                {% include molecule('quantity-counter') with {
                    modifiers: ['shopping-list'],
                    data: {
                        isDisabled: not embed.isItemAvailable
                    },
                    attributes: {
                        name: 'shoppingListItem[quantity][' ~ data.listItem.idShoppingListItem ~ ']',
                        value: data.listItem.quantity
                    }
                } only %}
                {% if embed.isItemAvailable %}
                    <button type="submit" name="add-item" class="button button--hollow" value="{{ data.listItem.idShoppingListItem }}" {{qa('submit-button')}}>
                        {{'customer.account.shopping_list.add-to-cart' | trans}}
                    </button>
                {% endif %}
            {% endblock %}
        {% endembed %}
        {% if can('WriteShoppingListPermissionPlugin', data.shoppingList.idShoppingList) and widgetExists('ProductAlternativeWidgetPlugin') %}
            {{ widget('ProductAlternativeWidgetPlugin', item, data.shoppingList) }}
        {% endif %}
    {% endfor %}
{% endblock %}
