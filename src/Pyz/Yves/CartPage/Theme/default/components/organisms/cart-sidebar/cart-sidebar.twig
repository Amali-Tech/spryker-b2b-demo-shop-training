{% extends model('component') %}

{% define config = {
    name: 'cart-sidebar',
} %}

{% define data = {
    cart: required,
    cartItems: required,
    transformedCartItems: required,
    isQuoteEditable: required,
    isQuoteValid: required,
} %}

{% block class %}
    {{ parent() }} {{ config.jsName }}
{% endblock %}

{% block body %}
    {% block cartNote %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'cart_note.quote_form.enter_note' | trans,
                cart: data.cart,
            },
            attributes: {
                'data-toggle-target': '.js-cart-sidebar-item__content-note',
            },
        } only %}
            {% block contentClasses %}
                {{ config.jsName }}__content-note {{ parent() }}
            {% endblock %}

            {% block contentInner %}
                {% widget 'CartNoteFormWidget' args [data.cart] only %}{% endwidget %}
            {% endblock %}
        {% endembed %}
    {% endblock %}

    {% set isPermission = data.isQuoteEditable and can('ChangeCartItemPermissionPlugin') %}
    {% set isQuoteAndItems = data.cart.idQuote is not empty and data.cart.items is not empty %}

    {% if isPermission and isQuoteAndItems %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'cart.add-to-shopping-list' | trans,
                cart: data.cart,
            },
            attributes: {
                'data-toggle-target': '.js-cart-sidebar-item__content-shopping-list',
            },
        } only %}
            {% block contentClasses %}
                {{ config.jsName }}__content-shopping-list {{ parent() }}
            {% endblock %}

            {% block contentInner %}
                {% widget 'CreateShoppingListFromCartWidget' args [data.cart.idQuote] only %}{% endwidget %}
            {% endblock %}
        {% endembed %}
    {% endif %}

    {% if data.isQuoteEditable %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'cart.quick_add_to_cart' | trans,
                cart: data.cart,
            },
            attributes: {
                'data-toggle-target': '.js-cart-sidebar-item__content-quick-add-widget',
            },
        } only %}
            {% block contentClasses %}
                {{ config.jsName }}__content-quick-add-widget {{ parent() }}
            {% endblock %}

            {% block contentInner %}
                {% widget 'ProductConcreteAddWidget' args [
                    '',
                    'cart.quick_add_to_cart.submit' | trans,
                    'cart/quick-add',
                    true,
                ] only %}
                {% endwidget %}
            {% endblock %}
        {% endembed %}

        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'persistent_cart_share.title' | trans,
                cart: data.cart,
            },
            attributes: {
                'data-toggle-target': '.js-cart-sidebar-item__content-share-by-link-widget',
            },
            modifiers: ['with-label','shadow-less'],
        } only %}
            {% block contentClasses %}
                {{ config.jsName }}__content-share-by-link-widget {{ parent() }}
            {% endblock %}

            {% block contentInner %}
                {% widget 'ShareCartByLinkWidget' args [data.cart] only %}{% endwidget %}
            {% endblock %}
        {% endembed %}
    {% endif %}

    {% if data.cart.idQuote is not empty %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                title: 'comment_widget.comments_to_cart' | trans,
                cart: data.cart,
            },
        } only %}
            {% block icon %}{% endblock %}

            {% block contentClasses %}{% endblock %}

            {% block contentInner %}
                {% widget 'CommentThreadWidget' args [
                    data.cart.idQuote,
                    'quote',
                    app.request.requestUri,
                    data.cart.commentThread
                ] only %}
                {% endwidget %}
            {% endblock %}
        {% endembed %}
    {% endif %}

    {% block cartSummaryItem %}
        {% embed molecule('cart-sidebar-item', 'CartPage') with {
            data: {
                cart: data.cart,
                transformedCartItems: data.transformedCartItems,
                isQuoteValid: data.isQuoteValid,
                isQuoteEditable: data.isQuoteEditable,
            },
            modifiers: ['summary'],
        } only %}
            {% block body %}
                <div class="{{ config.name }}__start">
                    <div class="{{ config.name }}__order-header grid grid--justify grid--middle">
                        <h6 class="{{ config.name }}__title col">{{ 'cart.your-order' | trans }}</h6>
                        <div class="{{ config.name }}__quantity col">{{ data.transformedCartItems | length }} {{ 'checkout.step.summary.items' | trans }}</div>
                    </div>

                    {% set isDiscountVoucherFormWidget = data.isQuoteEditable and can('ChangeCartItemPermissionPlugin') and can('SeePricePermissionPlugin') %}

                    {% if isDiscountVoucherFormWidget %}
                        {% widget 'DiscountVoucherFormWidget' only %}{% endwidget %}
                    {% endif %}
                </div>

                {% block cartSummary %}
                    {% if can('SeePricePermissionPlugin') %}
                        {% include molecule('cart-summary', 'CartPage') with {
                            data: {
                                cart: data.cart,
                                isQuoteValid: data.isQuoteValid,
                                isQuoteEditable: data.isQuoteEditable,
                            },
                        } only %}
                    {% endif %}
                {% endblock %}
            {% endblock %}
        {% endembed %}
    {% endblock %}

    {% widget 'QuoteRequestAgentOverviewWidget' only %}
        {% block body %}
            {% block activeRequest %}
                {% if data.quoteRequestOverviewCollection.currentQuoteRequest %}
                    <div class="{{ config.name }}__item {{ config.name }}__item--summary">
                        {{ block('activeRequestActions') }}
                    </div>
                {% endif %}
            {% endblock %}
        {% endblock %}
    {% endwidget %}

    {% include molecule('toggler-accordion') with {
        attributes: {
            'wrap-selector': '.' ~ config.jsName,
            'trigger-selector': '.js-cart-sidebar-item__trigger',
            'class-to-toggle': 'is-hidden',
        },
    } only %}
{% endblock %}
